// role: 1 - user, 2 - publisher, 3 - admin, 4 - super admin
model user {
  id            Int      @id @default(autoincrement())
  name          String   @unique @db.VarChar(17)
  email         String   @unique @db.VarChar(1007)
  password      String   @db.VarChar(1007)
  ip            String   @default("") @db.VarChar(233)
  avatar        String   @default("") @db.VarChar(233)
  role          Int      @default(1)
  status        Int      @default(0)
  register_time DateTime @default(now())
  moemoepoint   Int      @default(0)
  bio           String   @default("") @db.VarChar(107)

  daily_image_count Int    @default(0)
  daily_check_in    Int    @default(0)
  daily_upload_size Int    @default(0)
  last_login_time   String @default("")

  chat_membership       chat_member[]
  sent_chat_message     chat_message[]          @relation("sent_chat_message")
  seen_chat_message     chat_message_seen[]
  deleted_chat_message  chat_message[]          @relation("deleted_chat_message")
  chat_message_reaction chat_message_reaction[]

  admin_log         admin_log[]
  patch_tag         patch_tag[]
  patch_company     patch_company[]
  patch_walkthrough patch_walkthrough[]

  patch_favorite      user_patch_favorite_relation[]
  patch_contribute    user_patch_contribute_relation[]
  patch_comment_like  user_patch_comment_like_relation[]
  patch_resource_like user_patch_resource_like_relation[]

  following          user_follow_relation[] @relation("user_following")
  follower           user_follow_relation[] @relation("user_follower")
  patch              patch[]                @relation("user_patch")
  patch_comment      patch_comment[]        @relation("user_patch_comment")
  patch_resource     patch_resource[]       @relation("user_patch_resource")
  patch_history      patch_history[]        @relation("user_patch_history")
  patch_pull_request patch_pull_request[]   @relation("user_patch_pull_request")
  send_message       user_message[]         @relation("user_send_message")
  receive_message    user_message[]         @relation("user_receive_message")

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model admin_log {
  id      Int    @id @default(autoincrement())
  type    String
  content String @db.VarChar(10007)
  status  Int    @default(0)

  user_id Int
  user    user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt
}

// follower follows following, e.g. user 1 followed user 2 => follower_id: 1, following_id: 2
model user_follow_relation {
  id Int @id @default(autoincrement())

  follower_id  Int
  following_id Int

  follower  user @relation("user_follower", fields: [follower_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  following user @relation("user_following", fields: [following_id], references: [id])

  @@unique([follower_id, following_id])
}

// status: 0 - unread, 1 - read, 2 - approve, 3 - decline
model user_message {
  id      Int    @id @default(autoincrement())
  type    String
  content String @db.VarChar(10007)
  status  Int    @default(0)
  link    String @default("") @db.VarChar(1007)

  sender_id    Int?
  sender       user? @relation("user_send_message", fields: [sender_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  recipient_id Int?
  recipient    user? @relation("user_receive_message", fields: [recipient_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model user_patch_favorite_relation {
  id Int @id @default(autoincrement())

  user_id  Int
  user     user  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  patch_id Int
  patch    patch @relation(fields: [patch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([user_id, patch_id])
}

model user_patch_contribute_relation {
  id Int @id @default(autoincrement())

  user_id  Int
  user     user  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  patch_id Int
  patch    patch @relation(fields: [patch_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([user_id, patch_id])
}

model user_patch_comment_like_relation {
  id Int @id @default(autoincrement())

  user_id    Int
  user       user          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  comment_id Int
  comment    patch_comment @relation(fields: [comment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([user_id, comment_id])
}

model user_patch_resource_like_relation {
  id Int @id @default(autoincrement())

  user_id     Int
  user        user           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  resource_id Int
  resource    patch_resource @relation(fields: [resource_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([user_id, resource_id])
}
